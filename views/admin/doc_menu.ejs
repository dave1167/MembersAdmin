<!-- Wappler include head-page="layouts/admin" fontawesome_5="cdn" bootstrap5="local" is="dmx-app" id="dashboard" appconnect="local" style="--bs-body-bg: #fffeee;" components="{dmxBrowser:{}}" -->
<div is="dmx-browser" id="browser1"></div>
<main>
  <div class="container-fluid">
    <div class="row text-center">
      <div class="col">
        <h1>Email</h1>
      </div>
    </div>
    <div class="row pt-4">
      <div class="align-self-center text-center border border-2 rounded rounded-3 border-success col-2 me-2 pt-4 pb-2 h-75 shadow-lg">

        <i class="fas fa-clone fa-6x" dmx-style:color="'blue'" dmx-on:click="browser1.goto('/admin/email/template_list',true,'Templates')"></i>
        <p>Document Templates</p>
      </div>
      <div class="align-self-center text-center border border-2 rounded rounded-3 border-success pt-4 pb-2 col-2 h-75 shadow" dmx-on:click="browser1.goto('/admin/email/renewals')">

        <i class="fas fa-user-tag fa-6x" dmx-style:color="'blue'" dmx-on:click="browser1.goto('/admin/email/template_list',true,'Templates')"></i>
        <p>Send Renewal Emails</p>
      </div>
      <div class="col">
      </div>
      <div class="col">
      </div>
    </div>
    <div class="row">
      <div class="col">

      </div>
    </div>
    <div class="row">
      <div class="col">
      </div>
    </div>
  </div>
</main>


<meta name="ac:route" content="/admin/doc_menu">

<script>
  function calculateDueDate(joinDate,lastPayment) {
  // Parse joinDate to get day and month components
  const joinDateObj = new Date(joinDate);
  const day = joinDateObj.getDate();
  const month = joinDateObj.getMonth() + 1; // Adding 1 because getMonth() returns 0-indexed month

  // Get the current year
  const currentYear = new Date().getFullYear();

  // Combine day, month from joinDate and current year to create paymentDueDate
  let paymentDueDate = new Date(`${currentYear}-${month}-${day}`);

  // Convert lastPayment to Date object
 // Split lastPayment date string and create Date object
  const lastPaymentComponents = lastPayment.split("-");
  const lastPaymentDate = new Date(
    parseInt(lastPaymentComponents[0]),
    parseInt(lastPaymentComponents[1]) - 1, // Subtracting 1 because months are 0-indexed
    parseInt(lastPaymentComponents[2])
  );
//alert(lastPaymentDate);
  // If lastPaymentDate is after paymentDueDate, add one year to paymentDueDate
  if (lastPaymentDate > paymentDueDate) {
    paymentDueDate.setFullYear(paymentDueDate.getFullYear() + 1);
  }
dmx.global.set('payDueDate', payDueDate);
 alert (paymentDueDate);
 //return paymentDueDate;
}
 

</script>