{
  "meta": {
    "options": {
      "linkedFile": "/views/admin/members.ejs",
      "linkedForm": "serverconnectform1"
    },
    "$_GET": [
      {
        "type": "text",
        "name": "sort"
      },
      {
        "type": "text",
        "name": "dir"
      },
      {
        "type": "date",
        "name": "payduedate"
      },
      {
        "type": "number",
        "name": "amount"
      }
    ],
    "$_POST": [
      {
        "type": "number",
        "fieldName": "memNo",
        "name": "memNo"
      },
      {
        "type": "text",
        "fieldName": "title",
        "name": "title"
      },
      {
        "type": "text",
        "fieldName": "firstName",
        "name": "firstName"
      },
      {
        "type": "text",
        "fieldName": "lastName",
        "name": "lastName"
      },
      {
        "type": "date",
        "fieldName": "dateJoined",
        "options": {
          "rules": {
            "core:date": {}
          }
        },
        "name": "dateJoined"
      },
      {
        "type": "boolean",
        "fieldName": "gdpr",
        "name": "gdpr"
      },
      {
        "type": "boolean",
        "fieldName": "ukTax",
        "name": "ukTax"
      },
      {
        "type": "boolean",
        "fieldName": "memCard",
        "name": "memCard"
      },
      {
        "type": "number",
        "fieldName": "memDetsId",
        "name": "memDetsId"
      },
      {
        "type": "number",
        "name": "tbl_member_detail_id"
      },
      {
        "type": "text",
        "fieldName": "tel",
        "name": "tel"
      },
      {
        "type": "text",
        "fieldName": "mobile",
        "name": "mobile"
      },
      {
        "type": "text",
        "fieldName": "email",
        "name": "email"
      },
      {
        "type": "text",
        "fieldName": "notes",
        "name": "notes"
      },
      {
        "type": "text",
        "fieldName": "address1",
        "name": "address1"
      },
      {
        "type": "text",
        "fieldName": "address2",
        "name": "address2"
      },
      {
        "type": "text",
        "fieldName": "town1",
        "name": "town1"
      },
      {
        "type": "text",
        "fieldName": "town2",
        "name": "town2"
      },
      {
        "type": "text",
        "fieldName": "postcode",
        "name": "postcode"
      },
      {
        "type": "number",
        "name": "status"
      },
      {
        "type": "number",
        "name": "memCategory"
      },
      {
        "type": "date",
        "name": "payDueDate"
      },
      {
        "type": "number",
        "name": "payType"
      },
      {
        "type": "date",
        "name": "datePaid"
      },
      {
        "type": "number",
        "name": "amount"
      },
      {
        "type": "number",
        "name": "memCat"
      },
      {
        "type": "number",
        "name": "newRenewal"
      },
      {
        "type": "text",
        "fieldName": "selectNewPayType",
        "multiple": true,
        "name": "selectNewPayType"
      },
      {
        "type": "number",
        "fieldName": "slctNewPayType",
        "name": "slctNewPayType"
      },
      {
        "type": "number",
        "fieldName": "slctNewMemCat",
        "name": "slctNewMemCat"
      },
      {
        "type": "text",
        "name": "payNotes"
      }
    ]
  },
  "exec": {
    "steps": [
      {
        "name": "qryGetLastMemNo",
        "module": "dbconnector",
        "action": "select",
        "options": {
          "connection": "db",
          "sql": {
            "type": "select",
            "columns": [
              {
                "table": "tbl_member_details",
                "column": "memNo",
                "aggregate": "MAX",
                "alias": "lastmem",
                "recid": 1
              }
            ],
            "params": [],
            "table": {
              "name": "tbl_member_details"
            },
            "primary": "memDetsId",
            "joins": [],
            "groupBy": [],
            "query": "select max(`memNo`) as `lastmem` from `tbl_member_details`"
          }
        },
        "output": true,
        "meta": [
          {
            "type": "number",
            "name": "lastmem"
          }
        ],
        "outputType": "array",
        "type": "dbconnector_select"
      },
      {
        "name": "valNewMemId",
        "module": "core",
        "action": "setvalue",
        "options": {
          "value": "{{qryGetLastMemNo[0].lastmem+1}}",
          "key": "gnewMemId"
        },
        "meta": [
          {
            "name": "lastmem",
            "type": "number"
          }
        ],
        "outputType": "number",
        "output": true
      },
      {
        "name": "wait",
        "module": "core",
        "action": "wait",
        "options": {
          "delay": 300
        }
      },
      {
        "name": "insertDets",
        "module": "dbupdater",
        "action": "insert",
        "options": {
          "connection": "db",
          "sql": {
            "type": "insert",
            "values": [
              {
                "table": "tbl_member_details",
                "column": "title",
                "type": "text",
                "value": "{{$_POST.title.lowercase().capitalize()}}"
              },
              {
                "table": "tbl_member_details",
                "column": "firstName",
                "type": "text",
                "value": "{{$_POST.firstName.lowercase().capitalize()}}"
              },
              {
                "table": "tbl_member_details",
                "column": "lastName",
                "type": "text",
                "value": "{{$_POST.lastName.lowercase().capitalize()}}"
              },
              {
                "table": "tbl_member_details",
                "column": "dateJoined",
                "type": "date",
                "value": "{{$_POST.dateJoined}}"
              },
              {
                "table": "tbl_member_details",
                "column": "gdpr",
                "type": "boolean",
                "value": "{{$_POST.gdpr.default(0)}}"
              },
              {
                "table": "tbl_member_details",
                "column": "ukTax",
                "type": "boolean",
                "value": "{{$_POST.ukTax.default(0)}}"
              },
              {
                "table": "tbl_member_details",
                "column": "memCard",
                "type": "boolean",
                "value": "{{$_POST.memCard.default(0)}}"
              },
              {
                "table": "tbl_member_details",
                "column": "status",
                "type": "number",
                "value": "{{1}}"
              },
              {
                "table": "tbl_member_details",
                "column": "payDueDate",
                "type": "date",
                "value": "{{$_POST.dateJoined}}"
              },
              {
                "table": "tbl_member_details",
                "column": "memCategory",
                "type": "number",
                "value": "{{$_POST.slctNewMemCat}}"
              },
              {
                "table": "tbl_member_details",
                "column": "memNo",
                "type": "number",
                "value": "{{valNewMemId}}"
              }
            ],
            "table": "tbl_member_details",
            "returning": "memDetsId",
            "query": "insert into `tbl_member_details` (`dateJoined`, `firstName`, `gdpr`, `lastName`, `memCard`, `memCategory`, `memNo`, `payDueDate`, `status`, `title`, `ukTax`) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) returning `memDetsId`",
            "params": [
              {
                "name": ":P1",
                "type": "expression",
                "value": "{{$_POST.title.lowercase().capitalize()}}",
                "test": ""
              },
              {
                "name": ":P2",
                "type": "expression",
                "value": "{{$_POST.firstName.lowercase().capitalize()}}",
                "test": ""
              },
              {
                "name": ":P3",
                "type": "expression",
                "value": "{{$_POST.lastName.lowercase().capitalize()}}",
                "test": ""
              },
              {
                "name": ":P4",
                "type": "expression",
                "value": "{{$_POST.dateJoined}}",
                "test": ""
              },
              {
                "name": ":P5",
                "type": "expression",
                "value": "{{$_POST.gdpr.default(0)}}",
                "test": ""
              },
              {
                "name": ":P6",
                "type": "expression",
                "value": "{{$_POST.ukTax.default(0)}}",
                "test": ""
              },
              {
                "name": ":P7",
                "type": "expression",
                "value": "{{$_POST.memCard.default(0)}}",
                "test": ""
              },
              {
                "name": ":P8",
                "type": "expression",
                "value": "{{1}}",
                "test": ""
              },
              {
                "name": ":P9",
                "type": "expression",
                "value": "{{$_POST.dateJoined}}",
                "test": ""
              },
              {
                "name": ":P10",
                "type": "expression",
                "value": "{{$_POST.slctNewMemCat}}",
                "test": ""
              },
              {
                "name": ":P11",
                "type": "expression",
                "value": "{{valNewMemId}}",
                "test": ""
              }
            ]
          }
        },
        "meta": [
          {
            "name": "identity",
            "type": "text"
          },
          {
            "name": "affected",
            "type": "number"
          }
        ],
        "output": true
      },
      {
        "name": "lastId",
        "module": "core",
        "action": "setvalue",
        "options": {
          "key": "gLastId",
          "value": "{{insertDets.identity}}"
        },
        "meta": [],
        "outputType": "text"
      },
      {
        "name": "",
        "options": {
          "comment": "Get the Memcat details from the MemDets table  using lastid"
        }
      },
      {
        "name": "qryGetMemCat",
        "module": "dbconnector",
        "action": "single",
        "options": {
          "connection": "db",
          "sql": {
            "type": "select",
            "columns": [
              {
                "table": "tbl_member_details",
                "column": "memCategory",
                "recid": 1
              }
            ],
            "params": [
              {
                "operator": "equal",
                "type": "expression",
                "name": ":P1",
                "value": "{{lastId}}",
                "test": "2"
              }
            ],
            "table": {
              "name": "tbl_member_details"
            },
            "primary": "memDetsId",
            "joins": [],
            "wheres": {
              "condition": "AND",
              "rules": [
                {
                  "id": "tbl_member_details.memDetsId",
                  "field": "tbl_member_details.memDetsId",
                  "type": "double",
                  "operator": "equal",
                  "value": "{{lastId}}",
                  "data": {
                    "table": "tbl_member_details",
                    "column": "memDetsId",
                    "type": "number",
                    "columnObj": {
                      "type": "increments",
                      "primary": true,
                      "unique": false,
                      "nullable": false,
                      "name": "memDetsId"
                    }
                  },
                  "operation": "=",
                  "table": "tbl_member_details"
                }
              ],
              "conditional": null,
              "valid": true
            },
            "query": "select `memCategory` from `tbl_member_details` where `tbl_member_details`.`memDetsId` = ?"
          }
        },
        "output": true,
        "meta": [
          {
            "type": "number",
            "name": "memCategory"
          }
        ],
        "outputType": "object"
      },
      {
        "name": "",
        "options": {
          "comment": "get the membership category using the info in above step"
        }
      },
      {
        "name": "qryMemCat",
        "module": "dbconnector",
        "action": "single",
        "options": {
          "connection": "db",
          "sql": {
            "type": "select",
            "columns": [
              {
                "table": "tbl_membershipType",
                "column": "memTypeId"
              },
              {
                "table": "tbl_membershipType",
                "column": "memTypeDesc"
              },
              {
                "table": "tbl_membershipType",
                "column": "cost"
              }
            ],
            "params": [
              {
                "operator": "equal",
                "type": "expression",
                "name": ":P1",
                "value": "{{qryGetMemCat.memCategory}}",
                "test": "2"
              }
            ],
            "table": {
              "name": "tbl_membershipType"
            },
            "primary": "memTypeId",
            "joins": [],
            "wheres": {
              "condition": "AND",
              "rules": [
                {
                  "id": "tbl_membershipType.memTypeId",
                  "field": "tbl_membershipType.memTypeId",
                  "type": "double",
                  "operator": "equal",
                  "value": "{{qryGetMemCat.memCategory}}",
                  "data": {
                    "table": "tbl_membershipType",
                    "column": "memTypeId",
                    "type": "number",
                    "columnObj": {
                      "type": "increments",
                      "primary": true,
                      "unique": false,
                      "nullable": false,
                      "name": "memTypeId"
                    }
                  },
                  "operation": "="
                }
              ],
              "conditional": null,
              "valid": true
            },
            "query": "select `memTypeId`, `memTypeDesc`, `cost` from `tbl_membershipType` where `tbl_membershipType`.`memTypeId` = ?"
          }
        },
        "output": true,
        "meta": [
          {
            "type": "number",
            "name": "memTypeId"
          },
          {
            "type": "text",
            "name": "memTypeDesc"
          },
          {
            "type": "number",
            "name": "cost"
          }
        ],
        "outputType": "object"
      },
      {
        "name": "insertPers",
        "module": "dbupdater",
        "action": "insert",
        "options": {
          "connection": "db",
          "sql": {
            "type": "insert",
            "values": [
              {
                "table": "tbl_member_detail_stbl_mem_pers",
                "column": "tbl_member_detail_id",
                "type": "number",
                "value": "{{lastId}}",
                "recid": 1
              },
              {
                "table": "tbl_member_detail_stbl_mem_pers",
                "column": "tel",
                "type": "text",
                "value": "{{$_POST.tel}}",
                "recid": 2
              },
              {
                "table": "tbl_member_detail_stbl_mem_pers",
                "column": "mobile",
                "type": "text",
                "value": "{{$_POST.mobile}}",
                "recid": 3
              },
              {
                "table": "tbl_member_detail_stbl_mem_pers",
                "column": "email",
                "type": "text",
                "value": "{{$_POST.email.lowercase()}}",
                "recid": 4
              },
              {
                "table": "tbl_member_detail_stbl_mem_pers",
                "column": "notes",
                "type": "text",
                "value": "{{$_POST.notes}}",
                "recid": 5
              }
            ],
            "table": "tbl_member_detail_stbl_mem_pers",
            "returning": "memPersId",
            "query": "insert into `tbl_member_detail_stbl_mem_pers` (`email`, `mobile`, `notes`, `tbl_member_detail_id`, `tel`) values (?, ?, ?, ?, ?) returning `memPersId`",
            "params": [
              {
                "name": ":P1",
                "type": "expression",
                "value": "{{lastId}}",
                "test": ""
              },
              {
                "name": ":P2",
                "type": "expression",
                "value": "{{$_POST.tel}}",
                "test": ""
              },
              {
                "name": ":P3",
                "type": "expression",
                "value": "{{$_POST.mobile}}",
                "test": ""
              },
              {
                "name": ":P4",
                "type": "expression",
                "value": "{{$_POST.email.lowercase()}}",
                "test": ""
              },
              {
                "name": ":P5",
                "type": "expression",
                "value": "{{$_POST.notes}}",
                "test": ""
              }
            ]
          }
        },
        "meta": [
          {
            "name": "identity",
            "type": "text"
          },
          {
            "name": "affected",
            "type": "number"
          }
        ],
        "output": true
      },
      {
        "name": "insertAdds",
        "module": "dbupdater",
        "action": "insert",
        "options": {
          "connection": "db",
          "sql": {
            "type": "insert",
            "values": [
              {
                "table": "tbl_member_detail_stbl_mem_address",
                "column": "tbl_member_detail_id",
                "type": "number",
                "value": "{{lastId}}"
              },
              {
                "table": "tbl_member_detail_stbl_mem_address",
                "column": "address1",
                "type": "text",
                "value": "{{$_POST.address1.capitalize()}}"
              },
              {
                "table": "tbl_member_detail_stbl_mem_address",
                "column": "address2",
                "type": "text",
                "value": "{{$_POST.address2.capitalize()}}"
              },
              {
                "table": "tbl_member_detail_stbl_mem_address",
                "column": "town1",
                "type": "text",
                "value": "{{$_POST.town1.capitalize()}}"
              },
              {
                "table": "tbl_member_detail_stbl_mem_address",
                "column": "town2",
                "type": "text",
                "value": "{{$_POST.town2.capitalize()}}"
              },
              {
                "table": "tbl_member_detail_stbl_mem_address",
                "column": "postcode",
                "type": "text",
                "value": "{{$_POST.postcode.uppercase()}}"
              }
            ],
            "table": "tbl_member_detail_stbl_mem_address",
            "returning": "memAddId",
            "query": "insert into `tbl_member_detail_stbl_mem_address` (`address1`, `address2`, `postcode`, `tbl_member_detail_id`, `town1`, `town2`) values (?, ?, ?, ?, ?, ?) returning `memAddId`",
            "params": [
              {
                "name": ":P1",
                "type": "expression",
                "value": "{{lastId}}",
                "test": ""
              },
              {
                "name": ":P2",
                "type": "expression",
                "value": "{{$_POST.address1.capitalize()}}",
                "test": ""
              },
              {
                "name": ":P3",
                "type": "expression",
                "value": "{{$_POST.address2.capitalize()}}",
                "test": ""
              },
              {
                "name": ":P4",
                "type": "expression",
                "value": "{{$_POST.town1.capitalize()}}",
                "test": ""
              },
              {
                "name": ":P5",
                "type": "expression",
                "value": "{{$_POST.town2.capitalize()}}",
                "test": ""
              },
              {
                "name": ":P6",
                "type": "expression",
                "value": "{{$_POST.postcode.uppercase()}}",
                "test": ""
              }
            ]
          }
        },
        "meta": [
          {
            "name": "identity",
            "type": "text"
          },
          {
            "name": "affected",
            "type": "number"
          }
        ],
        "output": true
      },
      {
        "name": "",
        "options": {
          "comment": "Create Pay Records"
        }
      },
      {
        "name": "insertPayRec",
        "module": "dbupdater",
        "action": "insert",
        "options": {
          "connection": "db",
          "sql": {
            "type": "insert",
            "values": [
              {
                "table": "tbl_member_detail_stbl_payments",
                "column": "tbl_member_detail_id",
                "type": "number",
                "value": "{{lastId}}"
              },
              {
                "table": "tbl_member_detail_stbl_payments",
                "column": "payType",
                "type": "number",
                "value": "{{$_POST.slctNewPayType}}"
              },
              {
                "table": "tbl_member_detail_stbl_payments",
                "column": "datePaid",
                "type": "date",
                "value": "{{$_POST.dateJoined}}"
              },
              {
                "table": "tbl_member_detail_stbl_payments",
                "column": "amount",
                "type": "number",
                "value": "{{qryMemCat.cost}}"
              },
              {
                "table": "tbl_member_detail_stbl_payments",
                "column": "memCat",
                "type": "number",
                "value": "{{qryMemCat.memTypeId}}"
              },
              {
                "table": "tbl_member_detail_stbl_payments",
                "column": "newRenewal",
                "type": "number",
                "value": "{{1}}"
              },
              {
                "table": "tbl_member_detail_stbl_payments",
                "column": "payNotes",
                "type": "text",
                "value": "{{$_POST.payNotes}}"
              }
            ],
            "table": "tbl_member_detail_stbl_payments",
            "returning": "paymentId",
            "query": "insert into `tbl_member_detail_stbl_payments` (`amount`, `datePaid`, `memCat`, `newRenewal`, `payNotes`, `payType`, `tbl_member_detail_id`) values (?, ?, ?, ?, ?, ?, ?) returning `paymentId`",
            "params": [
              {
                "name": ":P1",
                "type": "expression",
                "value": "{{lastId}}",
                "test": ""
              },
              {
                "name": ":P2",
                "type": "expression",
                "value": "{{$_POST.slctNewPayType}}",
                "test": ""
              },
              {
                "name": ":P3",
                "type": "expression",
                "value": "{{$_POST.dateJoined}}",
                "test": ""
              },
              {
                "name": ":P4",
                "type": "expression",
                "value": "{{qryMemCat.cost}}",
                "test": ""
              },
              {
                "name": ":P5",
                "type": "expression",
                "value": "{{qryMemCat.memTypeId}}",
                "test": ""
              },
              {
                "name": ":P6",
                "type": "expression",
                "value": "{{1}}",
                "test": ""
              },
              {
                "name": ":P7",
                "type": "expression",
                "value": "{{$_POST.payNotes}}",
                "test": ""
              }
            ]
          }
        },
        "meta": [
          {
            "name": "identity",
            "type": "text"
          },
          {
            "name": "affected",
            "type": "number"
          }
        ],
        "output": true
      }
    ]
  }
}